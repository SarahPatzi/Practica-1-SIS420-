# -*- coding: utf-8 -*-
"""Practica1-PrimeraForma-PatziSarah.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qUeit5QzuZzuZuLuZekyj_FiJ4lQMXHf

# **Primera Forma: Regresión lineal simple**
"""

import random
import pandas as pd
import matplotlib.pyplot as plt

"""Función para generar pesos"""

def generar_peso(altura):
    if altura < 1.4:
        return random.randint(40, 60)
    elif altura < 1.6:
        return random.randint(50, 70)
    elif altura < 1.8:
        return random.randint(60, 85)
    else:
        return random.randint(70, 100)

"""Para generar una lista de alturas y pesos:"""

altura = [round(random.uniform(1.3, 2.0), 2) for _ in range(100)]
peso = [generar_peso(a) for a in altura]

"""Para guardar los datos en un archivo CSV:"""

with open("TablaDeDatos.csv", "w") as f:
    f.write("Altura,Peso\n")
    for a, p in zip(altura, peso):
        f.write(f"{a},{p}\n")

"""Para mostrar la tabla de datos:"""

datos_generados = pd.read_csv("TablaDeDatos.csv")
print("Tabla de datos generada:")
#print(datos_generados) #no las muestra como tabla
#datos_generados.head() #muestra las primeras 4
#print(datos_generados.head(10)) #muestra las primeras 10 sin tabla
datos_generados.head(10) # Mostrar las primeras 10 filas en tabla

"""Inicializando variables y calcular la suma:"""

N = len(altura)
sumatoria_x = 0
sumatoria_y = 0
sumatoria_xy = 0
sumatoria_x_cuadrado = 0

for i in range(N):
    sumatoria_x += altura[i]
    sumatoria_y += peso[i]
    sumatoria_xy += altura[i] * peso[i]
    sumatoria_x_cuadrado += altura[i] ** 2

"""Cálculo de la pendiente (b) y la intersección (a)"""

b = (N * sumatoria_xy - sumatoria_x * sumatoria_y) / (N * sumatoria_x_cuadrado - sumatoria_x ** 2)
a = (sumatoria_y - b * sumatoria_x) / N

"""Mostrar los resultados"""

print(f"El valor de b (pendiente) es: {b}") #pendiente del calculo
print(f"El valor de a (intersección) es: {a}") #intersección del calculo

"""Cargar y verificar los datos"""

datos = pd.read_csv("TablaDeDatos.csv")
#print(datos.head(10)) #muestra sin separacion de tabla
datos.head(10) #muestra en tabla

"""Graficar los datos y la regresión"""

plt.scatter(datos["Altura"], datos["Peso"], color='#9f33ff', label="Datos") #grafica los puntos de datos para altura vs. peso
plt.plot(datos["Altura"], a + b * datos["Altura"], color='#ff338d', label=f"y = {a:.2f} + {b:.2f}x") #grafica una línea de regresión en el gráfico
plt.title('Altura vs Peso') #para agregrar titulo al gráfico
plt.xlabel('Altura') #para agregar etiqueta al eje x
plt.ylabel('Peso') #para agregar etiqueta al eje y
plt.legend() #para crear y mostrar la leyenda en el gráfico, la leyenda ese el cuadrito superior (lila=Datos...)
plt.show() #para mostrar el gráfico